/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package inheritance;

import org.junit.jupiter.api.Test;


import java.util.ArrayList;

import static org.junit.jupiter.api.Assertions.*;

class RestaurantTest {
    @Test void RestaurantConstTest(){
        Restaurant restaurant = new Restaurant("Doaa", 50);
        System.out.println("Resturant : to string" + restaurant);
        assertEquals("Doaa", restaurant.getName());
        assertEquals(0, restaurant.getNumOfStars());
        assertEquals(50, restaurant.getPrice());
    }
    @Test void RestaurantToSting(){
        Restaurant restaurant = new Restaurant("Doaa", 50);
        System.out.println(restaurant);
        assertEquals("Restaurant{name='Doaa', numOfStars=0.0, price=50.0$ []}",restaurant.toString());
    }

    @Test void ReviewConstTest(){
        Restaurant restaurant = new Restaurant("Doaa", 50);
        Review review=new Review("Doaa","like it",4, restaurant);
        System.out.println("Review : to string" + review);
//        assertNotEquals("result author should return 'Doaa' ", "Doaa", review.getAuthor()); // works also
        assertEquals("Doaa", review.getAuthor(),"wrong author name");
        assertEquals("like it", review.getBody(),"wrong getBody");
        assertEquals(restaurant, review.getRestaurant(),"wrong getRestaurant");
    }

    @Test void ReviewToSting(){
        Restaurant restaurant = new Restaurant("Doaa", 50);
        Review review=new Review("Doaa","like it",4, restaurant);
//        assertNotEquals("like it I rate this restaurant with 4.0 stars",review.toString());
        assertEquals("Doaa: \n" +
                " ===> like it I rate this restaurant with 4.0 stars",review.toString());
    }

    @Test void AddReviewConstTest(){
        Restaurant mac = new Restaurant("Mac", 20);
//        Restaurant Kfc = new Restaurant("KFC", 30);

        Review newreview1 =new Review("Doaa","like it",4, mac);
        Review newreview2 =new Review("Doaa1","like it1",4, mac);
        Review newreview3 =new Review("Doaa2","like it2",4, mac);

        mac.addReview(newreview1);
        mac.addReview(newreview2);
        mac.addReview(newreview3);


         assertEquals("Doaa", newreview1.getAuthor(),"wrong author name");
         assertEquals(4, newreview2.getNumOfStars());
        System.out.println(mac);
    }

}
